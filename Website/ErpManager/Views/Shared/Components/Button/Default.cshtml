@model ButtonComponent

@switch (Model.Type)
{
    case ButtonType.Button:
    case ButtonType.Submit:
    case ButtonType.Reset:
        <button class="component-button @ViewBag.Color @Model.ClassName" type="@Enum.GetName(Model.Type)?.ToLower()">
            @Model.Content
            @(string.IsNullOrEmpty(Model.Icon) ? string.Empty : Html.Raw($"<i class=\"{Model.Icon}\"></i>"))
        </button>
        break;

    case ButtonType.Function:
        <button class="component-button @ViewBag.Color @Model.ClassName" type="button" onclick="@(Model.OnClick)">
            @Model.Content
            @(string.IsNullOrEmpty(Model.Icon) ? string.Empty : Html.Raw($"<i class=\"{Model.Icon}\"></i>"))
        </button>
        break;

    case ButtonType.Redirect:
        if (string.IsNullOrEmpty(Model.Href) == false)
        {
            <a class="component-button @ViewBag.Color @Model.ClassName" href="@Model.Href"
            @(string.IsNullOrEmpty(Model.ID) == false ? $"id=\"{Model.ID}\"" : string.Empty)>
                @(string.IsNullOrEmpty(Model.Icon) ? string.Empty : Html.Raw($"<i class=\"{Model.Icon}\"></i>"))
                @Model.Content
            </a>
        }
        else
        {
            <a class="component-button @ViewBag.Color @(Model.ClassName)"
               id="@Model.ID"
               asp-route="@Model.Route">
                @(string.IsNullOrEmpty(Model.Icon) ? string.Empty : Html.Raw($"<i class=\"{Model.Icon}\"></i>"))
                @Model.Content
            </a>
        }
        break;
}


