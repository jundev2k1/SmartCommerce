@{
    var background = Url.Content("~/images/background/theme-setting-background.jpg");
    var componentScript = Url.Content("~/js/component-script/ThemeSetting/index.js");
}
<section id="themeSettingButton">
    <style>
        .btn-theme-settings {
            position: fixed;
            right: 12px;
            bottom: 90px;
            opacity: .5;
            background: var(--site-theme-operating);
            border-radius: 999px;
            z-index: 98;
        }

            .btn-theme-settings:hover {
                opacity: 1;
                transition: .25s ease-in-out;
            }

            .btn-theme-settings button[type=button] {
                padding: 12px;
            }

                .btn-theme-settings button[type=button] i {
                    width: 28px;
                    height: 28px;
                    font-size: 22px;
                    color: var(--site-title-operating);
                }

        .theme-settings {
            position: fixed;
            left: 0;
            top: 0;
            width: 100vw;
            height: 100vh;
            display: none;
            z-index: 99;
        }

            .theme-settings .overlay {
                position: relative;
                width: 100%;
                height: 100%;
                background: var(--site-color-shadow);
                backdrop-filter: blur(2px);
            }

            .theme-settings .theme-settings-popup {
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                width: 640px;
                height: 560px;
                overflow: hidden;
                background: var(--site-popup-operating);
                border-radius: var(--site-border-rounded);
            }

                .theme-settings .theme-settings-popup .theme-settings-header {
                    background: url('@background');
                    background-size: cover;
                    background-position: center center;
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    height: 30%;
                    border-radius: var(--site-border-rounded);
                    box-shadow: 0 0 6px var(--site-color-shadow);
                }

                    .theme-settings .theme-settings-popup .theme-settings-header h2 {
                        text-align: center;
                        font-size: 28px;
                        font-weight: 700;
                    }

                        .theme-settings .theme-settings-popup .theme-settings-header h2 i {
                            font-size: 48px;
                        }

                .theme-settings .theme-settings-popup .theme-settings-body {
                    display: flex;
                    flex-direction: column;
                    justify-content: center;
                    gap: 1rem;
                    width: 100%;
                    height: 70%;
                    padding: 0 1.5rem;
                }

                    .theme-settings .theme-settings-popup .theme-settings-body h3 {
                        font-size: 22px;
                        font-weight: 500;
                    }

                    .theme-settings .theme-settings-popup .theme-settings-body .setting-list {
                        display: flex;
                        flex-wrap: wrap;
                        gap: 12px;
                        align-items: flex-start;
                    }

                    .theme-settings .theme-settings-popup .theme-settings-body .setting-field {
                        position: relative;
                        text-align: center;
                        border-radius: var(--site-border-full);
                        overflow: hidden;
                        box-shadow: 0px 0px 2px var(--site-color-shadow);
                        filter: brightness(1);
                        cursor: pointer;
                    }

                        .theme-settings .theme-settings-popup .theme-settings-body .setting-field a {
                            display: block;
                            height: 40px;
                            margin: 18px;
                            font-size: 32px;
                        }

                        .theme-settings .theme-settings-popup .theme-settings-body .setting-field:hover {
                            filter: brightness(.97);
                            box-shadow: 1px 1px 4px var(--site-color-shadow);
                            transition: .4s;
                        }

                    .theme-settings .theme-settings-popup .theme-settings-body .setting-item .setting-field > a > i {
                        visibility: hidden;
                    }

                    .theme-settings .theme-settings-popup .theme-settings-body .setting-item.choose .setting-field > a > i {
                        visibility: visible;
                        text-shadow: 0 0 4px var(--site-theme-operating);
                        color: #d6d6d6;
                    }

                    .theme-settings .theme-settings-popup .theme-settings-body .setting-item.choose .setting-field::after {
                        content: '';
                        position: absolute;
                        width: 100%;
                        height: 100%;
                        top: 50%;
                        left: 50%;
                        border-radius: var(--site-border-full);
                        box-shadow: 0 0 6px #fff, 0 0 10px var(--site-theme-operating);
                        transform: translate(-50%, -50%);
                    }

                    .theme-settings .theme-settings-popup .theme-settings-body .btn-close-popup {
                        position: absolute;
                        bottom: 5%;
                        right: 5%;
                        background: var(--site-theme-operating);
                        padding: 8px 16px;
                        border-radius: var(--site-border-rounded);
                        box-shadow: 0 0 6px var(--site-color-shadow);
                        opacity: .5;
                        transition: .5s ease-in;
                    }

                        .theme-settings .theme-settings-popup .theme-settings-body .btn-close-popup:hover {
                            opacity: 1;
                        }
    </style>
    <div class="btn-theme-settings">
        <button type="button"><i class="fa-regular fa-brush fa-fw"></i></button>
    </div>
    <div class="theme-settings">
        <div class="overlay">
            <div class="theme-settings-popup">
                <div class="theme-settings-header">
                    <h2>
                        <i class="fa-regular fa-brush fa-fw"></i>
                        <br />
                        <span>@_localizer["ThemeSettings_Title"]</span>
                    </h2>
                </div>
                <div class="theme-settings-body">
                    <div class="mode-group">
                        <h3>@_localizer["ThemeSettings_Mode"]</h3>
                        <ul class="setting-list" id="renderModeSetting">
                            <li class="setting-item">
                                <div class="setting-field" style="background: var(--site-white-theme)"></div>
                            </li>
                        </ul>
                    </div>
                    <div class="theme-group">
                        <h3>@_localizer["ThemeSettings_Theme"]</h3>
                        <ul class="setting-list" id="renderThemeSetting">
                            <li class="setting-item">
                                <div class="setting-field" style="background: var(--site-white-theme)"></div>
                                <input name="theme-options" type="radio" value="white" />
                            </li>
                            <li class="setting-item">
                                <div class="setting-field"></div>
                                <input name="theme-options" type="radio" value="milky" />
                            </li>
                            <li class="setting-item">
                                <div class="setting-field"></div>
                                <input name="theme-options" type="radio" value="pastel" />
                            </li>
                        </ul>
                    </div>
                    <div class="btn-close-popup">
                        <button id="btnCloseSetting">
                            @_localizer["ThemeSettings_Leave"]
                            <i class="fa-regular fa-right-from-bracket fa-fw"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="@componentScript"></script>
    <script>
        const errorMessage = '@(_localizer["ThemeSettings_UpdateFailed"])';
        const successMessage = '@(_localizer["ThemeSettings_UpdateSuccess"])';
        // Initial menu
        ThemeSetting.init();
    </script>
</section>