@* // Copyright (c) 2024 - Jun Dev. All rights reserved *@

@model HeaderViewModel

<section id="headerBar">
	<div class="header">
		<div class="wrapper">
			<div class="@(Model.IsFullScreen ? string.Empty : "container")">
				<div class="row align-items-center">
					<div class="title col-md-6 col-sm-12 d-flex align-items-center gap-2 mb-1 mb-md-0">
						@if (Model.IsShowNavbarSwitch)
						{
							<button type="button" class="btn site-btn-outline-inner-theme btn-navbar-switch">
								<i class="fa-regular fa-bars" style="color: var(--site-title-operating)"></i>
							</button>
						}
						<h1>@ViewData["Title"]</h1>
					</div>
					<div class="sub-navbar col-md-6 col-sm-12 justify-content-start justify-content-md-end gap-2">
						<div class="language-change">
							@await Component.InvokeAsync(Constants.MANAGER_COMPONENT_NAME_LANGUAGE_SWITCHER)
						</div>
						<div class="user-notification">
							@await Component.InvokeAsync(Constants.MANAGER_COMPONENT_NAME_NOTIFICATION)
						</div>
						<div class="user-info"></div>
					</div>
				</div>
			</div>
		</div>
	</div>
	<script>
		const headerOnScroll = (event) => {
			const headerBar = document.querySelector("#headerBar");
			if (event.srcElement.scrollTop > 100) {
				if (!headerBar.classList.contains("sticky")) {
					headerBar.classList.add("sticky");
				}
			} else {
				if (headerBar.classList.contains("sticky")) {
					headerBar.classList.remove("sticky");
				}
			}
		};
		StoreMainLayoutScrollCallback.push(headerOnScroll);
	</script>
</section>