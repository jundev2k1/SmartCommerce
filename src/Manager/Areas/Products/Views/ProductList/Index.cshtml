@* // Copyright (c) 2024 - Jun Dev. All rights reserved *@

@{
	ViewData[Constants.GLOBAL_KEY_TITLE] = _localizer.Globals["Nav_Product_List"];
	ViewData[Constants.GLOBAL_KEY_CURRENT_PAGE] = "ProductList_Page";

	var breadcrumbs = new BreadcrumbViewModel[]
	{
		new BreadcrumbViewModel { Title = _localizer.Globals["Nav_Home"].Value, Href = Constants.MODULE_HOME_HOME_PATH },
		new BreadcrumbViewModel { Title = _localizer.Globals["Nav_Product_List"].Value, IsDisabled = true }
	};

	var hasResult = Model.PageData.Items.Any();
	var hasData = Model.PageData.TotalPage > 0;
}
@model ProductListViewModel

@await Component.InvokeAsync(Constants.MANAGER_COMPONENT_NAME_BREADCRUMB, breadcrumbs)

<section id="searchBar" class="site-card">
	<form id="advanceSearchForm" name="searchForm" asp-route="@Constants.MODULE_PRODUCT_PRODUCTLIST_NAME" method="post">
		<div class="row g-md-2 gx-1 gy-2">
			<div class="col-md-8 col-12">
				<div class="d-flex gap-1 search-bar-group">
					<div class="flex-grow-1">
						@await Component.InvokeAsync(Constants.MANAGER_COMPONENT_NAME_SEARCH_INPUT, new SearchInputViewModel { Name = "SearchFields.Keywords", Value = Model.SearchFields.Keywords, ClassName = "search-bar-input" })
					</div>
					<button id="btnExport" type="button" class="btn site-btn-outline-info only-desktop" data-bs-toggle="collapse" href="#filterAdvancedCollapse">
						<i class="fa-light fa-filter-list"></i>
						@_localizer.Globals["Btn_Filter"]
					</button>
				</div>
			</div>
			<div class="col-md-4 col-12 d-flex justify-content-end gap-2">
				<button id="btnExport" type="button" class="btn site-btn-outline-info only-mobile" data-bs-toggle="collapse" href="#filterAdvancedCollapse">
					<i class="fa-light fa-filter-list"></i>
					@_localizer.Globals["Btn_Filter"]
				</button>
				<button type="button" class="btn site-btn-outline-theme" data-bs-toggle="modal" data-bs-target="#exportModal">
					<i class="fa-light fa-file-export"></i>
					@_localizer.Globals["Btn_Export"]
				</button>
				<a asp-route="@Constants.MODULE_PRODUCT_PRODUCTREGISTER_NAME" class="btn site-btn-success">
					<i class="fa-light fa-plus"></i>
					@_localizer.Globals["Btn_Create"]
				</a>
			</div>
			<div class="col-12">
				<div class="collapse" id="filterAdvancedCollapse">
					<div class="card card-body">
						<h2 class="fs-4">@_localizer.Globals["Title_SearchAdvanced"]</h2>
						<ul class="row g-md-2 gx-1 gy-2">
							<li class="col-md-4 col-6">
								<div class="form-group">
									<label asp-for="SearchFields.ProductId" class="form-label">@_localizer.Fields["Product_ProductId"]</label>
									<input type="text" asp-for="SearchFields.ProductId" class="form-control" id="productIdForSearch" placeholder="@_localizer.Globals["PlaceHolder_SearchWith"] @_localizer.Fields["Product_ProductId"]...">
								</div>
							</li>
							<li class="col-md-4 col-6">
								<div class="form-group">
									<label for="StatusForSearch" class="form-label">@_localizer.Fields["Product_Status"]</label>
									@Html.DropDownListFor(
										model => model.SearchFields.Status,
										Model.InputOption.Status,
										new { id = "StatusForSearch", Class = "form-select" })
								</div>
							</li>
							<li class="col-md-4 col-12">
								<div class="form-group">
									<label for="takeOverByForSearch" class="form-label">@_localizer.Fields["Product_TakeOverId"]</label>
									<select asp-for="SearchFields.TakeOverId" class="form-select select-search-user" id="takeOverByForSearch">
										<option value="@Model.SearchFields.TakeOverId" selected></option>
									</select>
								</div>
							</li>
							<li class="col-md-8 col-12">
								<div class="form-group">
									<label for="productNameForSearch" class="form-label">@_localizer.Fields["Product_Name"]</label>
									<input asp-for="SearchFields.ProductName" type="text" class="form-control" id="productNameForSearch" placeholder="@_localizer.Globals["PlaceHolder_SearchWith"] @_localizer.Fields["Product_Name"]...">
								</div>
							</li>
							<li class="col-md-4 col-12">
								<div class="form-group">
									<label for="DisplayPriceForSearch" class="form-label">@_localizer.Fields["Product_DisplayPrice"]</label>
									@Html.DropDownListFor(
										model => model.SearchFields.DisplayPrice,
										Model.InputOption.DisplayPrice,
										new { id = "DisplayPriceForSearch", Class = "form-select" })
								</div>
							</li>
							<li class="col-12">
								<div class="row g-md-2 gx-1 gy-2">
									<div class="col-md-3 col-12">
										<label for="address1ForSearch" class="form-label">@_localizer.Fields["Product_Address1"]</label>
										<select asp-for="SearchFields.Address1" class="form-select select-search-address-1" id="address1ForSearch">
											@if (string.IsNullOrEmpty(Model.SearchFields.Address1) == false)
											{
												<option value="@Model.SearchFields.Address1" selected></option>
											}
										</select>
									</div>
									<div class="col-md-3 col-12">
										<div>
											<label for="address2ForSearch" class="form-label">@_localizer.Fields["Product_Address2"]</label>
											<select asp-for="SearchFields.Address2" class="form-select select-search-address-2" id="address2ForSearch" data-parent-id="address1ForSearch">
												@if (string.IsNullOrEmpty(Model.SearchFields.Address2) == false)
												{
													<option value="@Model.SearchFields.Address2" selected></option>
												}
											</select>
										</div>
									</div>
									<div class="col-md-3 col-12">
										<label for="address3ForSearch" class="form-label">@_localizer.Fields["Product_Address3"]</label>
										<select asp-for="SearchFields.Address3" class="form-select select-search-address-3" id="address3ForSearch" data-parent-id="address2ForSearch">
											@if (string.IsNullOrEmpty(Model.SearchFields.Address3) == false)
											{
												<option value="@Model.SearchFields.Address3" selected></option>
											}
										</select>
									</div>
									<div class="col-md-3 col-12">
										<label for="address4ForSearch" class="form-label">@_localizer.Fields["Product_Address4"]</label>
										<input type="text" asp-for="SearchFields.Address4" class="form-control" id="address4ForSearch" placeholder="@_localizer.Globals["PlaceHolder_SearchWith"] @_localizer.Fields["Product_Address"]...">
									</div>
								</div>
							</li>
							<li class="col-md-4 col-12">
								<div class="form-group">
									<label for="minPrice1ForSearch" class="form-label">@_localizer.Fields["Product_Price1"]</label>
									<div class="d-flex gap-1 align-items-center">
										<input type="text" asp-for="SearchFields.MinPrice1" class="form-control" id="minPrice1ForSearch" placeholder="@_localizer.Globals["PlaceHolder_Min"]...">
										~
										<input type="text" asp-for="SearchFields.MaxPrice1" class="form-control" id="maxPrice1ForSearch" placeholder="@_localizer.Globals["PlaceHolder_Max"]...">
									</div>
								</div>
							</li>
							<li class="col-md-4 col-12">
								<div class="form-group">
									<label for="minPrice2ForSearch" class="form-label">@_localizer.Fields["Product_Price2"]</label>
									<div class="d-flex gap-1 align-items-center">
										<input type="text" asp-for="SearchFields.MinPrice2" class="form-control" id="minPrice2ForSearch" placeholder="@_localizer.Globals["PlaceHolder_Min"]...">
										~
										<input type="text" asp-for="SearchFields.MaxPrice2" class="form-control" id="maxPrice2ForSearch" placeholder="@_localizer.Globals["PlaceHolder_Max"]...">
									</div>
								</div>
							</li>
							<li class="col-md-4 col-12">
								<div class="form-group">
									<label class="form-label">@_localizer.Fields["Product_Price3"]</label>
									<div class="d-flex gap-1 align-items-center">
										<input type="text" asp-for="SearchFields.MinPrice3" class="form-control" id="minPrice3ForSearch" placeholder="@_localizer.Globals["PlaceHolder_Min"]...">
										~
										<input type="text" asp-for="SearchFields.MaxPrice3" class="form-control" id="maxPrice3ForSearch" placeholder="@_localizer.Globals["PlaceHolder_Max"]...">
									</div>
								</div>
							</li>
							<li class="col-md-4 col-12">
								<div class="form-group">
									<label class="form-label">@_localizer.Fields["Product_Size1"]</label>
									<div class="d-flex gap-1 align-items-center">
										<input type="text" asp-for="SearchFields.MinSize1" class="form-control" id="minSize1ForSearch" placeholder="@_localizer.Globals["PlaceHolder_From"]...">
										~
										<input type="text" asp-for="SearchFields.MaxSize1" class="form-control" id="maxSize1ForSearch" placeholder="@_localizer.Globals["PlaceHolder_To"]...">
									</div>
								</div>
							</li>
							<li class="col-md-4 col-12">
								<div class="form-group">
									<label for="minSize2ForSearch" class="form-label">@_localizer.Fields["Product_Size2"]</label>
									<div class="d-flex gap-1 align-items-center">
										<input type="text" asp-for="SearchFields.MinSize2" class="form-control" id="minSize2ForSearch" placeholder="@_localizer.Globals["PlaceHolder_From"]...">
										~
										<input type="text" asp-for="SearchFields.MaxSize2" class="form-control" id="maxSize2ForSearch" placeholder="@_localizer.Globals["PlaceHolder_To"]...">
									</div>
								</div>
							</li>
							<li class="col-md-4 col-12">
								<div class="form-group">
									<label for="minSize3ForSearch" class="form-label">@_localizer.Fields["Product_Size3"]</label>
									<div class="d-flex gap-1 align-items-center">
										<input type="text" asp-for="SearchFields.MinSize3" class="form-control" id="minSize3ForSearch" placeholder="@_localizer.Globals["PlaceHolder_From"]...">
										~
										<input type="text" asp-for="SearchFields.MaxSize3" class="form-control" id="maxSize3ForSearch" placeholder="@_localizer.Globals["PlaceHolder_To"]...">
									</div>
								</div>
							</li>
							<li class="col-md-6 col-12">
								<div class="form-group">
									<label for="dateCreatedFromForSearch" class="form-label">@_localizer.Fields["Product_DateCreated"]</label>
									<div class="d-flex gap-1 align-items-center">
										<input type="datetime" asp-for="SearchFields.DateCreatedFrom" class="form-control datetime-picker" id="dateCreatedFromForSearch" placeholder="@_localizer.Globals["PlaceHolder_From"]...">
										~
										<input type="datetime" asp-for="SearchFields.DateCreatedTo" class="form-control datetime-picker" id="dateCreatedToForSearch" placeholder="@_localizer.Globals["PlaceHolder_To"]...">
									</div>
								</div>
							</li>
							<li class="col-md-6 col-12">
								<div class="form-group">
									<label for="dateChangedFromForSearch" class="form-label">@_localizer.Fields["Product_DateChanged"]</label>
									<div class="d-flex gap-1 align-items-center">
										<input type="datetime" asp-for="SearchFields.DateChangedFrom" class="form-control datetime-picker" id="dateChangedFromForSearch" placeholder="@_localizer.Globals["PlaceHolder_From"]...">
										~
										<input type="datetime" asp-for="SearchFields.DateChangedTo" class="form-control datetime-picker" id="dateChangedToForSearch" placeholder="@_localizer.Globals["PlaceHolder_To"]...">
									</div>
								</div>
							</li>
						</ul>
						<div id="searchControl" class="d-flex justify-content-md-end mt-4">
							<div class="group-control w-auto row g-md-2 gx-1 gy-2">
								<div class="form-group col-md-auto col-12">
									@Html.DropDownListFor(
										model => model.SearchFields.DelFlg,
										Model.InputOption.DeleteFlg,
										new { id="delFlgForSearch", Class = "form-select w-auto" })
								</div>
								<div class="form-group col-md-auto col-8">
									<button id="btnSubmitAdvanced" type="submit" class="btn site-btn-theme">
										<i class="fa-light fa-magnifying-glass"></i>
										@_localizer.Globals["Btn_SearchAdvanced"]
									</button>
								</div>
								<div class="form-group col-md-auto col-4">
									<button id="btnResetForm" type="reset" class="btn site-btn-outline-theme" onclick="resetSearchForm('advanceSearchForm')">
										<i class="fa-light fa-arrow-rotate-left"></i>
										@_localizer.Globals["Btn_ResetForm"]
									</button>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</form>
</section>
<section id="bodyPageLoad" class="site-card mt-2">
	<div class="row">
		<div class="col-12">
			@await Component.InvokeAsync(Constants.MANAGER_COMPONENT_NAME_DYNAMIC_LIST, new DynamicListViewModel
			{
				DataSource = Model.PageData.Items,
				PlaceholderText = _localizer.Globals["ListPage_NoResult"],
				// Set pagination
				PageInfo = new PageInfo(
					PageIndex: Model.SearchFields.PageNumber,
					PageSize: Model.SearchFields.PageSize,
					SearchCount: Model.PageData.Items.Length,
					SearchHitCount: Model.PageData.TotalRecord,
					TotalPage: Model.PageData.TotalPage),
					RowAttributes = new()
					{
						{ "onclick", model => $"redirectPage('{Url.RouteUrl(Constants.MODULE_PRODUCT_PRODUCTDETAIL_NAME, new { id = ((ProductModel?)model).ProductId })}')" },
						{ "style", model => $"cursor: pointer;" }
					},
				// Set header rendering
				Columns = new []
				{
					new CellInfo().SetColumn(() => _localizer.Fields["Product_ProductId"], new { width = "15%" }, sortBy: Constants.FLG_ORDER_BY_PRODUCT_PRODUCT_ID),
					new CellInfo().SetColumn(() => _localizer.Globals["Title_Information"], new { width = "25%" }, sortBy: Constants.FLG_ORDER_BY_PRODUCT_NAME),
					new CellInfo().SetColumn(() => _localizer.Fields["Product_Price"], new { @class = "text-center", width = "15%" }, sortBy: Constants.FLG_ORDER_BY_PRODUCT_PRICE),
					new CellInfo().SetColumn(() => _localizer.Fields["Product_Status"], new { @class = "text-center only-desktop", width = "15%" }, sortBy: Constants.FLG_ORDER_BY_PRODUCT_SALE_STATUS),
					new CellInfo().SetColumn(() => _localizer.Fields["Product_Address"], new { @class = "text-center only-desktop", width = "30%" }),
				},
				// Set body rendering
				Cells = new []
				{
					// Column: Product ID
					new CellInfo().SetCell<ProductModel>(model => model.ProductId),
					// Column: Product information
					new CellInfo().SetCell<ProductModel>(async model => $@"
						<p class='mb-0'>{model.Name}</p>
						<div class='d-block only-desktop'>
							{
								await ViewUtilities.RenderComponent(
									_viewComponentHelper ,
									Constants.MANAGER_COMPONENT_NAME_CREATED_BY_BADGE,
									new { BranchId = model.BranchId, CreatedBy = model.CreatedBy, DateCreated = model.DateCreated })
							}
						</div>"),
					// Column: Product price
					new CellInfo().SetCell<ProductModel>(
						model => CommonUtility.GetProductDisplayPrice(model!, Constants.CONFIG_CURRENCY_IN_USE),
						attribute: new { @class="text-end" }),
					// Column: Product status
					new CellInfo().SetCell<ProductModel>(
						async model => await ViewUtilities.RenderComponent(_viewComponentHelper, Constants.MANAGER_COMPONENT_NAME_PRODUCT_STATUS_BADGE, new { status = model.Status }),
						attribute: new { @class="text-center only-desktop" }),
					// Column: Product address
					new CellInfo().SetCell<ProductModel>(
						model => AddressUtilities.GetProductAddress(model!),
						attribute: new { @class="text-end only-desktop" }),
				}
			})
		</div>
	</div>
</section>
<section id="ModalContent">
	<div class="modal fade" id="exportModal" tabindex="-1" aria-labelledby="exportModalLabel" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h1 class="modal-title fs-5" id="exportModalLabel">@_localizer.Globals["Btn_Export"]</h1>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body">
					<p>
						Chức năng này đang được thiết kế và lên ý tưởng
					</p>
					<p>
						This feature is being designed and conceptualized
					</p>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn site-btn-secondary" data-bs-dismiss="modal">@_localizer.Globals["Btn_Close"]</button>
					<button type="button" class="btn site-btn-primary">@_localizer.Globals["Btn_Export"]</button>
				</div>
			</div>
		</div>
	</div>
</section>
@section ViewScript {
	<script type="module">
		import { SearchFormHandler } from "@Url.Content("~/js/common/form/index.js")";

		// Set search advance setting
		const searchAdvanceSetting = {
			btnSearchSelector: '#btnSubmitAdvanced',
			targetSelector: '#searchBar',
			searchUrl: '@Url.RouteUrl(Constants.MODULE_PRODUCT_PRODUCTLIST_NAME)',
			defaultParameters: {
				'@Constants.REQUEST_KEY_PAGE_NO': '@Model.SearchFields.PageNumber',
				'@Constants.REQUEST_KEY_PAGE_SIZE': '@Model.SearchFields.PageSize',
			},
			searchSettings: [
				{
					selector: '#productIdForSearch',
					requestKey: '@Constants.REQUEST_KEY_PRODUCT_PRODUCT_ID',
				},
				{
					selector: '#StatusForSearch',
					requestKey: '@Constants.REQUEST_KEY_PRODUCT_STATUS',
				},
				{
					selector: '#productNameForSearch',
					requestKey: '@Constants.REQUEST_KEY_PRODUCT_PRODUCT_NAME',
				},
				{
					selector: '#takeOverByForSearch',
					requestKey: '@Constants.REQUEST_KEY_PRODUCT_TAKE_OVER_ID',
				},
				{
					selector: '#DisplayPriceForSearch',
					requestKey: '@Constants.REQUEST_KEY_PRODUCT_PRICE_TYPE',
				},
				{
					selector: '#address1ForSearch',
					requestKey: '@Constants.REQUEST_KEY_PRODUCT_ADDRESS1',
				},
				{
					selector: '#address2ForSearch',
					requestKey: '@Constants.REQUEST_KEY_PRODUCT_ADDRESS2',
				},
				{
					selector: '#address3ForSearch',
					requestKey: '@Constants.REQUEST_KEY_PRODUCT_ADDRESS3',
				},
				{
					selector: '#address4ForSearch',
					requestKey: '@Constants.REQUEST_KEY_PRODUCT_ADDRESS4',
				},
				{
					selector: '#minPrice1ForSearch',
					requestKey: '@Constants.REQUEST_KEY_PRODUCT_MIN_PRICE1',
				},
				{
					selector: '#maxPrice1ForSearch',
					requestKey: '@Constants.REQUEST_KEY_PRODUCT_MAX_PRICE1',
				},
				{
					selector: '#minPrice2ForSearch',
					requestKey: '@Constants.REQUEST_KEY_PRODUCT_MIN_PRICE2',
				},
				{
					selector: '#maxPrice2ForSearch',
					requestKey: '@Constants.REQUEST_KEY_PRODUCT_MAX_PRICE2',
				},
				{
					selector: '#minPrice3ForSearch',
					requestKey: '@Constants.REQUEST_KEY_PRODUCT_MIN_PRICE3',
				},
				{
					selector: '#maxPrice3ForSearch',
					requestKey: '@Constants.REQUEST_KEY_PRODUCT_MAX_PRICE3',
				},
				{
					selector: '#minSize1ForSearch',
					requestKey: '@Constants.REQUEST_KEY_PRODUCT_MIN_SIZE1',
				},
				{
					selector: '#maxSize1ForSearch',
					requestKey: '@Constants.REQUEST_KEY_PRODUCT_MAX_SIZE1',
				},
				{
					selector: '#minSize2ForSearch',
					requestKey: '@Constants.REQUEST_KEY_PRODUCT_MIN_SIZE2',
				},
				{
					selector: '#maxSize2ForSearch',
					requestKey: '@Constants.REQUEST_KEY_PRODUCT_MAX_SIZE2',
				},
				{
					selector: '#minSize3ForSearch',
					requestKey: '@Constants.REQUEST_KEY_PRODUCT_MIN_SIZE3',
				},
				{
					selector: '#maxSize3ForSearch',
					requestKey: '@Constants.REQUEST_KEY_PRODUCT_MAX_SIZE3',
				},
				{
					selector: '#dateChangedFromForSearch',
					requestKey: '@Constants.REQUEST_KEY_PRODUCT_DATE_CHANGED_FROM',
				},
				{
					selector: '#dateChangedToForSearch',
					requestKey: '@Constants.REQUEST_KEY_PRODUCT_DATE_CHANGED_TO',
				},
				{
					selector: '#dateCreatedFromForSearch',
					requestKey: '@Constants.REQUEST_KEY_PRODUCT_DATE_CREATED_FROM',
				},
				{
					selector: '#dateCreatedToForSearch',
					requestKey: '@Constants.REQUEST_KEY_PRODUCT_DATE_CREATED_TO',
				},
				{
					selector: '#delFlgForSearch',
					requestKey: '@Constants.REQUEST_KEY_PRODUCT_DELETE_FLG',
				},
			],
		};
		StoreWindowLoadCallback.push(() => new SearchFormHandler(searchAdvanceSetting).init());

		// Set search with keyword setting
		const searchKeywordSetting = {
			btnSearchSelector: '#searchBar .search-button',
			targetSelector: '',
			searchUrl: '@Url.RouteUrl(Constants.MODULE_PRODUCT_PRODUCTLIST_NAME)',
			defaultParameters: {
				'@Constants.REQUEST_KEY_PAGE_NO': '@Model.SearchFields.PageNumber',
				'@Constants.REQUEST_KEY_PAGE_SIZE': '@Model.SearchFields.PageSize',
				'@Constants.REQUEST_KEY_PRODUCT_DELETE_FLG': '@Constants.DEFAULT_FLG_OFF',
			},
			searchSettings: [
				{
					selector: '#searchBar .search-input',
					requestKey: '@Constants.REQUEST_KEY_KEYWORD',
				},
			]
		};
		StoreWindowLoadCallback.push(() => new SearchFormHandler(searchKeywordSetting).init());
	</script>
}
