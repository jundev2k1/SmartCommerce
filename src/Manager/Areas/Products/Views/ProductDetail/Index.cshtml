@* // Copyright (c) 2024 - Jun Dev. All rights reserved *@

@model ProductModel
@{
	ViewData[Constants.GLOBAL_KEY_TITLE] = _localizer.Globals["Nav_Product_Detail"];
	ViewData[Constants.GLOBAL_KEY_CURRENT_PAGE] = "ProductList_Page";

	var breadcrumbs = new BreadcrumbViewModel[]
	{
		new BreadcrumbViewModel { Title = _localizer.Globals["Nav_Home"].Value, Href = Constants.MODULE_HOME_HOME_PATH },
		new BreadcrumbViewModel { Title = _localizer.Globals["Nav_Product_List"].Value, Href = Constants.MODULE_PRODUCT_PRODUCTLIST_PATH },
		new BreadcrumbViewModel { Title = Model.ProductId, IsDisabled = true }
	};
}

@await Component.InvokeAsync(Constants.MANAGER_COMPONENT_NAME_BREADCRUMB, breadcrumbs)

<section id="bodyPageLoad">
	<div class="row g-md-2 g-1">
		<div class="col-md-6 col-12">
			<div class="site-card h-100">
				<div class="d-flex justify-content-start mb-2">
					<h3>@_localizer.Globals["Title_Product_Images"]</h3>
				</div>
				@await Component.InvokeAsync(Constants.MANAGER_COMPONENT_NAME_CAROUSEL, new { images = Model.Images, idTarget = "ProductDetailImage" })
			</div>
		</div>
		<div class="col-md-6 col-12">
			<div class="site-card h-100">
				<div class="d-flex gap-2 justify-content-end mb-2">
					<a asp-route="@Constants.MODULE_PRODUCT_PRODUCTPREVIEW_NAME" asp-route-branchId="@Model.BranchId" asp-route-id="@Model.ProductId" class="btn site-btn-info" target="_blank">
						<i class="fa-regular fa-eye"></i>
						@_localizer.Globals["Btn_Preview"]
					</a>
					<a asp-route="@Constants.MODULE_PRODUCT_PRODUCTDELETE_NAME" asp-route-id="@Model.ProductId" class="btn site-btn-danger">
						<i class="fa-light fa-trash"></i>
						@_localizer.Globals["Btn_Delete"]
					</a>
					<a asp-route="@Constants.MODULE_PRODUCT_PRODUCTREGISTER_NAME" asp-route-id="@Model.ProductId" class="btn site-btn-success">
						<i class="fa-light fa-copy"></i>
						@_localizer.Globals["Btn_CopyInsert"]
					</a>
					<a asp-route="@Constants.MODULE_PRODUCT_PRODUCTEDIT_NAME" asp-route-id="@Model.ProductId" class="btn site-btn-primary">
						<i class="fa-light fa-pencil"></i>
						@_localizer.Globals["Btn_Edit"]
					</a>
				</div>
				<div class="d-flex justify-content-start mb-2">
					<h3>@_localizer.Globals["Title_Product_Info"]</h3>
				</div>
				<div class="row g-md-2 gx-1 gy-2">
					<div class="col-6">
						<div class="d-flex flex-column gap-1">
							<label class="fw-semibold">@_localizer.Fields["Product_ProductId"]:</label>
							<p>@Model.ProductId</p>
						</div>
					</div>
					<div class="col-6">
						<div class="d-flex flex-column gap-1">
							<label class="fw-semibold">@_localizer.Fields["Product_Status"]:</label>
							<p>@await Component.InvokeAsync(Constants.MANAGER_COMPONENT_NAME_PRODUCT_STATUS_BADGE, new { status = Model.Status })</p>
						</div>
					</div>
					<div class="col-12">
						<div class="d-flex flex-column gap-1">
							<label class="fw-semibold">@_localizer.Fields["Product_Name"]:</label>
							<p>@Model.Name</p>
						</div>
					</div>
					<div class="col-6">
						<div class="d-flex flex-column gap-1">
							<label class="fw-semibold">@_localizer.Fields["Product_Price1"]:</label>
							<p>@CommonUtility.GetProductPrice(Model.Price1, Constants.CONFIG_CURRENCY_IN_USE)</p>
						</div>
					</div>
					<div class="col-6">
						<div class="d-flex flex-column gap-1">
							<label class="fw-semibold">@_localizer.Fields["Product_Price2"]:</label>
							<p>@CommonUtility.GetProductPrice(Model.Price2, Constants.CONFIG_CURRENCY_IN_USE)</p>
						</div>
					</div>
					<div class="col-6">
						<div class="d-flex flex-column gap-1">
							<label class="fw-semibold">@_localizer.Fields["Product_Price3"]:</label>
							<p>@CommonUtility.GetProductPrice(Model.Price3, Constants.CONFIG_CURRENCY_IN_USE)</p>
						</div>
					</div>
					<div class="col-6">
						<div class="d-flex flex-column gap-1">
							<label class="fw-semibold">@_localizer.Fields["Product_DisplayPrice"]:</label>
							<p>@ProductUtilities.GetDislayPriceContent(_localizer.Dictionary, Model.DisplayPrice)</p>
						</div>
					</div>
					<div class="col-12">
						<div class="d-flex flex-column gap-1">
							<label class="fw-semibold">@_localizer.Fields["Product_Address"]:</label>
							<p>@AddressUtilities.GetProductAddress(Model)</p>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class="col-md-12">
			<div class="site-card">
				<div class="d-flex justify-content-between mb-2">
					<h3>@_localizer.Globals["Title_Product_Description"]</h3>
				</div>
				<div class="p-2 site-note site-editor-content">
					@(!string.IsNullOrEmpty(Model.Description) ? Html.Raw(Model.Description) : _localizer.Messages["Message_NoExistProductDescription"])
				</div>
			</div>
		</div>
	</div>
</section>
@section ViewScript {
}